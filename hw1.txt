1 Аргументація стійкості паролю

Складність підбору паролю залежить від кількості можливих комбінацій символів, які використовуються в паролі. Чим більша кількість символів в алфавіті, тим більше можливих комбінацій і тим більша складність підбору паролю.
Наприклад, якщо алфавіт складається тільки з цифр від 0 до 9, то для пароля довжиною 4 символи, можливих комбінацій буде 10 000 (10^4), а для пароля довжиною 8 символів - 100 мільйонів (10^8). Це здається значною кількістю, але з використанням потужних комп'ютерів, атакуючий може відбирати паролі за дуже короткий проміжок часу.
Якщо в алфавіт додати літери верхнього і нижнього регістрів (52 символи), то для пароля довжиною 8 символів можливих комбінацій буде вже 53 трільйони (52^8), що значно складніше для атаки.
Додавання спецсимволів до алфавіту (таких як *, %, $ тощо) ще більше збільшує кількість можливих комбінацій і зроблює підбір паролю ще складнішим.
Отже, залежно від алфавіту, з якого обрані символи пароля, складність його підбору може варіюватися від дуже легкої до дуже складної. Рекомендується використовувати паролі з довгими і випадковими комбінаціями символів з різних категорій (цифри, літери верхнього та нижнього регістрів, спецсимволи), щоб забезпечити найвищий рівень безпеки.

2 Пошук прообразу геш-функції 

123 a03ab19b866fc585b5cb1812a2f63ca861e7e7643ee5d43fd7106b623725fd67

d182aed568b01fee105557a1d173791c798030db267cf94e17102b94dcbbda3c
Distributed Lab 7b6a784b05c64d2e669e026fc61296eca2ee8acd5112eb8ae5f16023809e203b

3 Дослідження райдужних таблиць (rainbow table)

Райдужні таблиці (Rainbow Table) - це метод побудови таблиць, який дозволяє ефективно виконувати атаки на хеш-функції. Райдужні таблиці створюються шляхом побудови ланцюжків, в яких кожен наступний елемент є результатом застосування хеш-функції до попереднього. Кінцевим елементом ланцюжка є пароль або його хеш-значення.
Принцип побудови райдужних таблиць полягає в наступному. Спочатку генерується випадкова початкова точка, яка складається з пароля і його хеш-значення. Потім застосовується хеш-функція до пароля, отримується нове хеш-значення, яке використовується для побудови наступної точки в ланцюжку. Цей процес повторюється кілька разів, поки не буде досягнуто певної фіксованої довжини ланцюжка. Кінцевим елементом ланцюжка є пароль або його хеш-значення. Після того, як було побудовано багато ланцюжків, вони записуються в таблицю.
Процес атаки на хеш-функцію за допомогою райдужних таблиць полягає в наступному. Нехай потрібно знайти пароль, який відповідає певному хеш-значенню. Спочатку береться це хеш-значення і знаходиться в таблиці відповідний ланцюжок. Потім застосовується хеш-функція до кінцевого елемента ланцюжка, отримується нове хеш-значення, яке порівнюється зі знаходженням в таблиці. Якщо знайдено збіг, то відповідний пароль є початковим елементом ланцюжка, і пошук завершується. Якщо збіг не знайдено, то від кінця ланцюжка береться наступний елемент і процес пошуку продовжуется.
